% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynfever_functions.R
\name{dynfever_simulate}
\alias{dynfever_simulate}
\title{Simulate Dynamical Fever}
\usage{
dynfever_simulate(y, ts, ps, seed)
}
\arguments{
\item{y}{a named vector of integers: the initial population of humans & dogs,
both infectious and susceptible}

\item{seed}{optionally, a random seed: if present, used with [set.seed()]}

\item{times}{a series of integers, starting with 1L: the times to report;
result with also include time 0L.}

\item{parms}{a list: the model parameters; see [dynfever_params()] return
value; the require entries are `vax_humans`, `vax_dogs`, `p_avoid`}
}
\value{
a `data.table` with columns `time`, ... TODO
}
\description{
A function to simulate a Dynamical Fever (DF) outbreak; applies
[dynfever_dStep()] to iteratively generate the outbreak
}
\details{
This method is not exported, but can still be viewed by students via
`ICI3D:::dynfever_simulate` (note the *triple* `:::`)
}
\examples{
library(data.table) # for pretty-printing output
set.seed(1); ps <- dynfever_params(); pop <- dynfever_pop()
sim1 <- ICI3D:::dynfever_simulate(pop, 1:10, ps)
sim1$states
sim1$params
# note that dynfever_simulate() is stochastic:
sim2 <- ICI3D:::dynfever_simulate(pop, 1:10, ps)
!all(sim1$states == sim2$states)
# however, it can be provided a seed to ensure comparable results:
all(sim1$states == ICI3D:::dynfever_simulate(pop, 1:10, ps, 1L)$states)

}
\seealso{
Other dynfever: 
\code{\link{dynfever_dStep}()},
\code{\link{dynfever_incidence}()},
\code{\link{dynfever_params}()},
\code{\link{dynfever_plot_heatmap}()},
\code{\link{dynfever_plot_series}()},
\code{\link{dynfever_plot_simple}()},
\code{\link{dynfever_pop}()},
\code{\link{dynfever_sample}()},
\code{\link{dynfever_summarize}()},
\code{\link{dynfever_toLong}()}
}
\concept{dynfever}
